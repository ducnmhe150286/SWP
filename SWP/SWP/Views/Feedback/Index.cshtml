@model IEnumerable<SWP.Models.FeedBack>
<style>
    .pagination {
        display: inline-block;
        margin-top: 20px; /* Điều chỉnh khoảng cách giữa bảng và nút phân trang */
    }

        .pagination a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
            border: 1px solid #ddd;
            font-size: 16px; /* Điều chỉnh kích thước chữ */
        }

            .pagination a.active {
                background-color: #4CAF50;
                color: white;
                border: 1px solid #4CAF50;
            }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }
    /* Style for the table */
    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }

    /* Style for odd rows */
    tbody tr:nth-child(odd) {
        background-color: #f9f9f9;
    }

</style>
<main>
<h2>Danh sách đánh giá</h2>

<table class="table">
    <thead>
        <tr>
            <th>Stt</th>
            <th>Người dùng</th>
            <th>Tên sản phẩm</th>
            <th>
                
                <select id="ratingFilter">
                    <option value="">Xếp hạng</option>
                    <option value="1">1 Sao</option>
                    <option value="2">2 Sao</option>
                    <option value="3">3 Sao</option>
                    <option value="4">4 Sao</option>
                    <option value="5">5 Sao</option>
                </select>
            </th>
            <th>Bình luận</th>
            <th>Ngày tạo</th>
            
        </tr>
    </thead>

    <tbody>


            @foreach (var feedback in Model.Select((value, index) => new { Value = value, Index = index + 1 }))
            {
                <tr>
                    <td>@feedback.Index</td>
                    <td>@feedback.Value.User.FirstName @feedback.Value.User.LastName</td>
                    <td>@feedback.Value.Product.ProductName</td>
                    <td>@feedback.Value.Rating Sao</td>
                    <td>@feedback.Value.Comment</td>
                    <td>@feedback.Value.CreatedDate.Value.ToString("dd/MM/yyyy")</td>
                </tr>
            }

         
        


    </tbody>

</table>
    <div class="pagination">
        @if (ViewBag.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })">&laquo; Previous</a>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { page = i })" class="@(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">Next &raquo;</a>
        }
    </div>
</main>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ratingFilter').change(function () {
            var selectedRating = $(this).val();
            if (selectedRating == '') {
                $('tbody tr').show();
            } else {
                $('tbody tr').hide();
                $('tbody tr td:nth-child(4)').filter(function () {
                    return parseInt($(this).text()) === parseInt(selectedRating);
                }).parent('tr').show();
            }
        });
    });
</script>


