@model Product
@using SWP.Dto;
@{
    var listPro = ViewData["listPro"] as List<Product>;
    var listFeedback = ViewBag.ListFeedback as List<FeedbackViewModel>;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .checked {
        color: orange;
    }

    .error-message {
        color: #dc3545; /* Màu đỏ */
        font-size: 0.875rem; /* Kích thước chữ nhỏ */
        display: none; /* Mặc định ẩn thông báo lỗi */
        margin-top: 0.25rem; /* Khoảng cách giữa input và thông báo lỗi */
    }
</style>
<section class="py-5">
    <div class="container">
        <div class="row gx-5">
            <aside class="col-lg-6">
                @if (Model.ProductImages.Any())
                {
                    <div class="border rounded-4 mb-3 d-flex justify-content-center">
                        <a id="mainImage" data-fslightbox="mygalley" class="rounded-4" target="_blank" data-type="image">
                            <img style="width: 400px; height: 350px; margin: auto;" class="rounded-4 fit" src="~/Images/@Model.ProductImages.First().Path" />
                        </a>
                    </div>
                    <div class="d-flex justify-content-center mb-3">
                        @foreach (var (item, index) in Model.ProductImages.Select((value, i) => (value, i)))
                        {
                            <a data-index="@index" data-fslightbox="mygalley" class="border mx-1 rounded-2 item-thumb" target="_blank" data-type="image">
                                <img width="60" height="60" class="rounded-2" src="~/Images/@item.Path" />
                            </a>
                        }
                    </div>
                }
                else
                {
                    <div class="border rounded-4 mb-3 d-flex justify-content-center">
                        <a data-fslightbox="mygalley" class="rounded-4" target="_blank" data-type="image">
                            <img style="max-width: 100%; max-height: 100vh; margin: auto;" class="rounded-4 fit" src="" />
                        </a>
                    </div>
                }
            </aside>

            <main class="col-lg-6">
                <div class="ps-lg-3">
                    <h4 class="title text-dark">
                        @Model.ProductName
                    </h4>

                    <div class="mb-3">
                        <span class="h5">@string.Format("{0:N0}", @Model.Price) vnđ</span>
                    </div>

                    <p>
                        @Model.Description
                    </p>

                    <div class="row">

                        <dt class="col-3">Loại</dt>
                        <dd class="col-9">@Model.Category.CategoryName</dd>

                        <dt class="col-3">Thương hiệu</dt>
                        <dd class="col-9">@Model.Brand.BrandName</dd>
                    </div>

                    <hr />
                    <form asp-controller="Cart" asp-action="Index">
                        <input type="hidden" name="productId" value="@Model.ProductId" />
                        <input type="hidden" name="productName" value="@Model.ProductName" />
                        <div class="row mb-4">
                            <div class="col-md-4 col-6">
                                <label class="mb-2">Kích thước</label>
                                <select name="size" id="size" class="form-select border border-secondary" style="height: 35px;">
                                    @foreach (var size in Model.ProductDetails.Select(x => x.Size).Distinct())
                                    {
                                        <option value="@size.SizeId">@size.SizeName</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 col-6">
                                <label class="mb-2">Màu sắc</label>
                                <select name="color" id="color" class="form-select border border-secondary" style="height: 35px;">
                                    <option value="" selected>Chọn màu</option> <!-- Đặt mục này là mặc định và đã chọn -->
                                    @foreach (var color in Model.ProductDetails.Select(x => x.Color).Distinct())
                                    {
                                        <option value="@color.ColorId">@color.ColorName</option>
                                    }
                                </select>
                                <div id="colorError" class="error-message" style="color: red; display: none;">Bạn chưa chọn màu sắc.</div>
                            </div>

                            <!-- col.// -->
                            <div class="col-md-4 col-6 mb-3">
                                <label class="mb-2 d-block">Số lượng</label>

                                <div class="input-group mb-3" style="width: 170px;">
                                    <button class="btn btn-outline-secondary button-minus" type="button" id="decrementBtn" data-mdb-ripple-color="dark" data-field="quantity">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                    <input type="number" class="quantity-field form-control text-center border border-secondary" step="1" max="10" value="1" name="quantity" aria-label="Quantity" aria-describedby="decrementBtn incrementBtn" />
                                    <button class="btn btn-outline-secondary button-plus" type="button" id="incrementBtn" data-mdb-ripple-color="dark" data-field="quantity">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                                <small class="text-danger error-message" style="display: none;">Số lượng không thể lớn hơn 10.</small>
                            </div>

                        </div>

                        <div id="error-message-wrapper">
                            @{
                                var message = ViewData["error_quantity"];
                            }
                            <p style="color:red">@message</p>
                        </div>
                        <button class="btn btn-primary shadow-0" type="submit"> <i class="me-1 fa fa-shopping-basket"></i> Thêm vào giỏ hàng </button>
                    </form>

                </div>
            </main>
        </div>
    </div>
</section>
<!-- content -->

<section class="bg-light border-top py-4">
    <div class="container">
        <div class="row gx-4">
            <div class="col-lg-8 mb-4">
                <div class="border rounded-2 px-3 py-2 bg-white">

                    <!-- Pills content -->
                    <div class="tab-content" id="ex1-content">
                        <div class="tab-pane fade show active" id="ex1-pills-1" role="tabpanel" aria-labelledby="ex1-tab-1">
                            <h2>Mô tả sản phẩm </h2>
                            @Model.Feature<br />
                            <h2>Đặc điểm</h2>
                            @Model.Attributes
                        </div>


                    </div>
                    <!-- Pills content -->
                </div>
                @if (ViewBag.check)
                {
                    <div class="mt-4">
                        <h2>Đánh giá sản phẩm</h2>
                        <div>
                            <!-- Review Form -->
                            <form asp-controller="Feedback" asp-action="Create" method="post" class="mt-3">
                                <input type="hidden" name="rating" id="rating" />
                                <input type="hidden" name="productID" value="@Model.ProductId" />
                                <div class="form-group">
                                    <label for="reviewContent">Nội dung đánh giá</label>
                                    <textarea class="form-control" id="reviewContent" name="reviewContent" rows="3"></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="reviewRating">Đánh giá sao</label>
                                    <div class="rating">
                                        <span class="fa fa-star haha checked" data-index="1"></span>
                                        <span class="fa fa-star haha" data-index="2"></span>
                                        <span class="fa fa-star haha" data-index="3"></span>
                                        <span class="fa fa-star haha" data-index="4"></span>
                                        <span class="fa fa-star haha" data-index="5"></span>
                                    </div>
                                </div>

                                <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
                            </form>
                            <!-- End Review Form -->
                        </div>
                        <!-- Review Section -->
                    </div>
                }
                else
                {
                    <div class="mt-4">
                        <h2>Đánh giá sản phẩm</h2>

                        <!-- Review Section -->
                    </div>
                }
                <div class="mt-4">

                    @if (ViewBag.listFeedback != null && ViewBag.listFeedback.Count > 0)
                    {
                        <div>
                            <!-- Review Form -->
                            @foreach (var item in ViewBag.listFeedback)
                            {
                                <div>
                                    <div class="col-lg-8 mb-4">
                                        <div class="border rounded-2 px-3 py-2 bg-white">
                                            <div class="tab-content" id="ex1-content">
                                                <div class="tab-pane fade show active" id="ex1-pills-1" role="tabpanel" aria-labelledby="ex1-tab-1">
                                                    <p> @item.User.FirstName @item.User.LastName</p>
                                                    <p> @item.CreatedDate.ToString()</p>

                                                    <div>
                                                        @for (int i = 1; i <= 5; i++)
                                                        {
                                                            if (i <= item.Rating)
                                                            {
                                                                <span class="fa fa-star checked" data-index="@i"></span>
                                                            }
                                                            else
                                                            {
                                                                <span class="fa fa-star" data-index="@i"></span>
                                                            }
                                                        }
                                                    </div>
                                                    <p>Nội dung : @item.Comment</p>
                                                </div>

                                            </div>


                                        </div>
                                    </div>


                                    @* @if (ViewBag.isUser)
                            {
                            <div>
                            <a asp-action="Delete" asp-controller="Feedback" asp-route-feedbackID="@item.FeedBackId">Xóa</a>
                            <a href="#" class="edit-feedback-link" data-feedback-id="@item.FeedBackId">Sửa</a>
                            </div>
                            <!-- Form chỉnh sửa -->
                            <form id="editForm-@item.FeedBackId" asp-controller="Feedback" asp-action="Edit" method="post" class="mt-3" style="display: none;">
                            <input type="hidden" name="id" value="@item.FeedBackId" />
                            <input type="hidden" name="rating" id="editRating" value="@item.Rating" />
                            <div class="form-group">
                            <label for="reviewContent">Nội dung đánh giá</label>
                            <textarea class="form-control" id="reviewContent" name="reviewContent" rows="3" >@item.Comment</textarea>
                            </div>
                            <div class="form-group">
                            <label for="reviewRating">Đánh giá sao</label>
                            <div class="rating">
                            @{
                            var rating = item.Rating;
                            }
                            @for (int i = 1; i <= 5; i++)
                            {
                            if (i <= rating)
                            {
                            <span class="fa fa-star hihi checked" data-index="@i"></span>
                            }
                            else
                            {
                            <span class="fa fa-star hihi" data-index="@i"></span>
                            }
                            }
                            </div>
                            </div>

                            <button type="submit" class="btn btn-primary">Cập nhật đánh giá</button>
                            </form>
                            }*@

                                </div>
                            }
                            <!-- End Review Form -->
                        </div>
                    }
                    else
                    {
                        <h4>Hiện tại chưa có đánh giá nào về sản phẩm này.</h4>
                    }

                    <!-- Review Section -->
                </div>
            </div>
            <div class="col-lg-4">
                <div class="px-0 border rounded-2 shadow-0">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Sản phẩm tương tự</h5>
                            @if (listPro.Any())
                            {
                                @foreach (var proSimilar in listPro)
                                {
                                    <div class="d-flex mb-3">
                                        <a asp-controller="ProductDetail" asp-action="Index" asp-route-productId="@proSimilar.ProductId" class="me-3">
                                            @if (proSimilar.ProductImages.Any())
                                            {
                                                <img src="~/Images/@proSimilar.ProductImages.First().Path" style="min-width: 96px; height: 96px;" class="img-md img-thumbnail" />
                                            }
                                            else
                                            {
                                                <img src="" style="min-width: 96px; height: 96px;" class="img-md img-thumbnail" />
                                            }

                                        </a>
                                        <div class="info">
                                            <a href="#" class="nav-link mb-1">
                                                @proSimilar.ProductName
                                            </a>
                                            <strong class="text-dark">@string.Format("{0:N0}", @proSimilar.Price) vnđ</strong>
                                        </div>
                                    </div>
                                }
                            }


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <script>
        $(document).ready(function () {
            $(".edit-feedback-link").click(function (e) {
                e.preventDefault();
                var feedbackId = $(this).data("feedback-id");
                $("#editForm-" + feedbackId).toggle(); // Hiển thị hoặc ẩn form chỉnh sửa
            });
        });
        function incrementValue(e) {
            e.preventDefault();
            var fieldName = $(e.target).data('field');
            var parent = $(e.target).closest('div');
            var currentVal = parseInt(parent.find('input[name=' + fieldName + ']').val(), 10);

            if (!isNaN(currentVal)) {
                parent.find('input[name=' + fieldName + ']').val(currentVal + 1);
            } else {
                parent.find('input[name=' + fieldName + ']').val(0);
            }
        }

        function decrementValue(e) {
            e.preventDefault();
            var fieldName = $(e.target).data('field');
            var parent = $(e.target).closest('div');
            var currentVal = parseInt(parent.find('input[name=' + fieldName + ']').val(), 10);

            if (!isNaN(currentVal) && currentVal > 1) {
                parent.find('input[name=' + fieldName + ']').val(currentVal - 1);
            } else {
                parent.find('input[name=' + fieldName + ']').val(1);
            }
        }

        $('.input-group').on('click', '.button-plus', function (e) {
            incrementValue(e);
        });

        $('.input-group').on('click', '.button-minus', function (e) {
            decrementValue(e);


        });


        document.addEventListener("DOMContentLoaded", function () {
            var errorMessage = document.querySelector('.error-message');
            var quantityInput = document.querySelector('.quantity-field');
            var incrementBtn = document.getElementById('incrementBtn');

            function validateQuantity() {
                var quantity = parseInt(quantityInput.value);
                if (quantity > 10) {
                    errorMessage.style.display = 'block';
                    setTimeout(function () {
                        errorMessage.style.display = 'none';
                    }, 3000); // ẩn thông báo sau 3 giây
                    quantityInput.value = 10; // Đặt giá trị về 10 nếu nhập quá 10
                } else {
                    errorMessage.style.display = 'none';
                }
            }

            quantityInput.addEventListener('input', validateQuantity); // Xử lý khi nhập số lượng bằng tay

            incrementBtn.addEventListener('click', function () {
                var quantity = parseInt(quantityInput.value);
                if (quantity >= 10) { // Kiểm tra nếu giá trị >= 10
                    errorMessage.style.display = 'block';
                    setTimeout(function () {
                        errorMessage.style.display = 'none';
                    }, 3000); // ẩn thông báo sau 3 giây
                    quantityInput.value = 10; // Đặt giá trị về 10
                } else {
                    errorMessage.style.display = 'none';;
                }
            });
        });


        // Lấy thẻ bao bọc của thông báo
        var errorMessageWrapper = document.getElementById('error-message-wrapper');

        // Kiểm tra xem có thông báo hiển thị không
        if (errorMessageWrapper) {
            // Ẩn thông báo sau 3 giây
            setTimeout(function () {
                errorMessageWrapper.style.display = 'none';
            }, 3000);
        }
        $(document).ready(function () {
            $(".haha").hover(function () {
                var index = $(this).data("index");
                $(this).parent().children(".fa-star").removeClass("checked");
                for (var i = 1; i <= index; i++) {
                    $(this).parent().children('[data-index="' + i + '"]').addClass("checked");
                }
            });

            $(".star-rating").mouseleave(function () {
                var rating = $(this).data("rating");
                $(this).children(".fa-star").removeClass("checked");
                for (var i = 1; i <= rating; i++) {
                    $(this).children('[data-index="' + i + '"]').addClass("checked");
                }
            });

            $(".haha").click(function () {
                var index = $(this).data("index");
                $(".haha").data("rating", index);
                $('#rating').val(index);
                // Lưu giá trị đánh giá vào cơ sở dữ liệu hoặc gửi tới Controller bằng AJAX
            });
            $(".hihi").hover(function () {
                var index = $(this).data("index");
                $(this).parent().children(".fa-star").removeClass("checked");
                for (var i = 1; i <= index; i++) {
                    $(this).parent().children('[data-index="' + i + '"]').addClass("checked");
                }
            });

            $(".star-rating").mouseleave(function () {
                var rating = $(this).data("rating");
                $(this).children(".fa-star").removeClass("checked");
                for (var i = 1; i <= rating; i++) {
                    $(this).children('[data-index="' + i + '"]').addClass("checked");
                }
            });

            $(".hihi").click(function () {
                var index = $(this).data("index");
                $(".hihi").data("rating", index);
                $('#editRating').val(index);
                // Lưu giá trị đánh giá vào cơ sở dữ liệu hoặc gửi tới Controller bằng AJAX
            });
        });


        var sizeToColorsMap = {
        @foreach (var size in Model.ProductDetails.Select(x => x.Size).Distinct())
        {
            <text>
                '@size.SizeId': [
                @foreach (var color in Model.ProductDetails.Where(x => x.Size.SizeId == size.SizeId).Select(x => x.Color).Distinct())
                {
                    <text>
                        {
                            value: '@color.ColorId',
                            text: '@{
                            string unicodeColorName = "";
                            foreach (char c in color.ColorName)
                            {
                                unicodeColorName += "\\u" + ((int)c).ToString("X4");
                            }
                            @Html.Raw(unicodeColorName)
                        }'
                                    },
                    </text>
                }
                                        ],
            </text>
        }
        };

        // Khi người dùng chọn kích thước, cập nhật dropdown màu sắc
        document.getElementById('size').addEventListener('change', function () {
            var selectedSizeId = this.value;
            var colorSelect = document.getElementById('color');
            colorSelect.innerHTML = '';

            // Tạo option mặc định cho dropdown màu sắc
            var defaultOption = document.createElement('option');
            defaultOption.text = 'Chọn màu';
            defaultOption.value = '';
            colorSelect.appendChild(defaultOption);

            // Lấy danh sách các màu sắc tương ứng với kích thước đã chọn
            var colors = sizeToColorsMap[selectedSizeId];
            if (colors) {
                colors.forEach(function (color) {
                    var option = document.createElement('option');
                    option.value = color.value; // Lấy giá trị màu sắc từ thuộc tính value
                    option.text = color.text; // Lấy tên màu sắc từ thuộc tính text
                    colorSelect.appendChild(option);
                });
            }
        });



        var colorSelect = document.getElementById('color');


        var colorError = document.getElementById('colorError');


        var submitButton = document.querySelector('button[type="submit"]');

        submitButton.addEventListener('click', function (event) {

            if (colorSelect.value === "") {

                event.preventDefault();

                colorError.style.display = 'block';
            } else {

                colorError.style.display = 'none';
            }
        });
    </script>
}

