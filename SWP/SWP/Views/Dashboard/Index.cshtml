@*@{
    Layout = null;
}*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Boxicons -->
    <link href="https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css" rel="stylesheet">
    <!-- Google Fonts -->
@*
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Poppins:wght@400;500;600;700&display=swap">
*@    
<!-- Additional CSS -->

    <!-- Additional Scripts -->

    <title>AdminHub</title>
</head>
<body>

	<!-- CONTENT -->

	
		<!-- MAIN -->
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Tổng quan hệ thống</h1>
					@*<ul class="breadcrumb">
						<li>
							<a href="#">Dashboard</a>
						</li>
						<li><i class='bx bx-chevron-right' ></i></li>
						<li>
							<a class="active" href="#">Home</a>
						</li>
					</ul>*@
				</div>
				
			</div>

			<ul class="box-info">
				<li>
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<h3>@ViewBag.NewOrders</h3>
					<a href="/Order?searchStatus=0">Đơn hàng mới</a>
					</span>
				</li>
				<li>
				<i class='bx bxs-group'></i>
				<span class="text">
				<h3>@ViewBag.TotalUsers</h3>
						<p>Tài khoản khách hàng</p>
				</span>
				</li>
				<li>
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text">
					<h3>@string.Format("{0:N0}", ViewBag.totalRevenueOneDay)₫</h3>
						<p>Doanh thu trong ngày</p>
					</span>
				</li>
			</ul>


			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>Doanh thu hệ thống theo tháng của năm</h3>
						@*<i class='bx bx-search'></i>
						<i class='bx bx-filter'></i>*@
						<select id="yearSelect">
							<!-- JavaScript sẽ thêm các tùy chọn vào đây -->
						</select>
</div>
				<div id="chart_div"></div>
@*					<table>
						<thead>
							<tr>
								<th>Khách hàng</th>
								<th>Số điện thoại</th>
								<th>Ngày đặt hàng</th>
								<th>Trạng thái</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var order in ViewBag.AllOrders)
							{
								<tr>
									<td>
									
									<p>@order?.CustomerName</p>
									</td>
									<td>@order?.PhoneNumber</td>
									<td>@order.OrderDate.ToString("dd-MM-yyyy")</td>
									<td>
										@if (order.Status == 0)
										{
											<span class="status pending"> Chờ xác nhận</span>
										}
										else if (order.Status == 1)
										{
											<span class="status process">Đã xác nhận</span>
										}
										else if (order.Status == 2)
										{
											<span class="status transfer">Vận chuyển</span>
										}
										else if (order.Status == 3)
										{
											<span class="status completed">Giao hàng thành công</span>
										}
										else if (order.Status == 4)
										{
											<span class="status fail">Giao hàng thất bại</span>
										}
										else
										{
											<span class="status">-</span>
										}
									</td>
								</tr>
							}
						</tbody>
					</table>
*@					@*<div class="d-flex justify-content-center mt-5">
						<nav aria-label="Page navigation">
							<ul class="pagination">
								@if (ViewBag.AllOrders.HasPreviousPage)
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("Index", new { page = ViewBag.AllOrders.PageIndex - 1 })" aria-label="Previous">
											<span aria-hidden="true">&laquo;</span>
										</a>
									</li>
								}
								@for (int i = 1; i <= ViewBag.AllOrders.TotalPages; i++)
								{
									<li class="page-item @(i == ViewBag.AllOrders.PageIndex ? "active" : "")">
										<a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
									</li>
								}
								@if (ViewBag.AllOrders.HasNextPage)
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("Index", new { page = ViewBag.AllOrders.PageIndex + 1 })" aria-label="Next">
											<span aria-hidden="true">&raquo;</span>
										</a>
									</li>
								}
							</ul>
						</nav>
					</div>*@
				</div>

				<div class="todo">
					<div class="head">
						<h3>Sản phẩm bán chạy</h3>
@*						<a href="/products/list">Danh sách sản phẩm>></a>
*@
					</div>
					<ul class="todo-list">
						@foreach (var product in ViewBag.TopSellingProducts)
						{
							<li class="completed">
								<div class="product-info">
								<div class="text">
										<p>@product.ProductName</p>
										<span>Đã bán: @product.TotalQuantity sản phẩm -</span>
										<span>Doanh thu:@string.Format("{0:N0}", @product.TotalRevenue)₫</span>

									</div>
								</div>
							</li>
						}
					</ul>
				</div>
				
			</div>
		</main>

		<!-- MAIN -->
	<!-- CONTENT -->
	<script>
		const allSideMenu = document.querySelectorAll('#sidebar .side-menu.top li a');

		allSideMenu.forEach(item => {
			const li = item.parentElement;

			item.addEventListener('click', function () {
				allSideMenu.forEach(i => {
					i.parentElement.classList.remove('active');
				})
				li.classList.add('active');
			})
		});




		// TOGGLE SIDEBAR
		const menuBar = document.querySelector('#content nav .bx.bx-menu');
		const sidebar = document.getElementById('sidebar');

		menuBar.addEventListener('click', function () {
			sidebar.classList.toggle('hide');
		})







		const searchButton = document.querySelector('#content nav form .form-input button');
		const searchButtonIcon = document.querySelector('#content nav form .form-input button .bx');
		const searchForm = document.querySelector('#content nav form');

		searchButton.addEventListener('click', function (e) {
			if (window.innerWidth < 576) {
				e.preventDefault();
				searchForm.classList.toggle('show');
				if (searchForm.classList.contains('show')) {
					searchButtonIcon.classList.replace('bx-search', 'bx-x');
				} else {
					searchButtonIcon.classList.replace('bx-x', 'bx-search');
				}
			}
		})





		if (window.innerWidth < 768) {
			sidebar.classList.add('hide');
		} else if (window.innerWidth > 576) {
			searchButtonIcon.classList.replace('bx-x', 'bx-search');
			searchForm.classList.remove('show');
		}


		window.addEventListener('resize', function () {
			if (this.innerWidth > 576) {
				searchButtonIcon.classList.replace('bx-x', 'bx-search');
				searchForm.classList.remove('show');
			}
		})



		const switchMode = document.getElementById('switch-mode');

		switchMode.addEventListener('change', function () {
			if (this.checked) {
				document.body.classList.add('dark');
			} else {
				document.body.classList.remove('dark');
			}
		})
	</script>
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script type="text/javascript">
		google.charts.load('current', { 'packages': ['corechart'] });
		google.charts.setOnLoadCallback(drawChart);

		function drawChart() {
			var data = new google.visualization.DataTable();
			data.addColumn('string', 'Tháng');
			data.addColumn('number', 'Doanh thu');

			// Thêm dữ liệu doanh thu từ tháng 1 đến tháng 12 vào biểu đồ
			data.addRows([
				['Tháng 1', @ViewBag.Revenues[0]],
				['Tháng 2', @ViewBag.Revenues[1]],
				['Tháng 3', @ViewBag.Revenues[2]],
				['Tháng 4', @ViewBag.Revenues[3]],
				['Tháng 5', @ViewBag.Revenues[4]],
				['Tháng 6', @ViewBag.Revenues[5]],
				['Tháng 7', @ViewBag.Revenues[6]],
				['Tháng 8', @ViewBag.Revenues[7]],
				['Tháng 9', @ViewBag.Revenues[8]],
				['Tháng 10', @ViewBag.Revenues[9]],
				['Tháng 11', @ViewBag.Revenues[10]],
				['Tháng 12', @ViewBag.Revenues[11]],
			]);

			// Kiểm tra xem tất cả các giá trị doanh thu có bằng 0 không
			var sumOfRevenues = 0;
		@foreach (var revenue in ViewBag.Revenues)
		{
			@:sumOfRevenues += @revenue;
		}
		if (sumOfRevenues === 0) {
				document.getElementById('chart_div').innerText = "Năm được chọn không có dữ liệu doanh thu";
				return;
			}

			var options = {
				title: '',
				width: '100%', // Chiều rộng 100% của phần tử chứa biểu đồ
				height: 500, // Chiều cao 100% của phần tử chứa biểu đồ
				legend: { position: 'none' },
				hAxis: { title: '' },
				vAxis: { title: '', format: 'decimal' } // Sử dụng 'decimal' để hiển thị số thập phân
			};

			var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
			chart.draw(data, options);
		}
	</script>
	<script>
		// Lấy phạm vi năm cho select dựa trên năm được chọn từ URL
		function updateYearRange(selectedYear) {
			var select = document.getElementById('yearSelect');
			select.innerHTML = ''; // Xóa tất cả các tùy chọn hiện có

			var startYear = selectedYear - 5;
			var endYear = selectedYear + 5;

			// Tạo các tùy chọn cho mỗi năm trong phạm vi
			for (var i = startYear; i <= endYear; i++) {
				var option = document.createElement('option');
				option.value = i;
				option.textContent = i;

				// Đặt năm hiện tại được chọn theo mặc định
				if (i === selectedYear) {
					option.selected = true;
				}

				select.appendChild(option);
			}
		}

		// Lấy năm từ URL
		function getYearFromURL() {
			var currentUrl = window.location.href.toLowerCase();
			var yearParam = currentUrl.substr(-4); // Lấy 4 ký tự cuối của URL
			var selectedYear = parseInt(yearParam);
			return isNaN(selectedYear) ? new Date().getFullYear() : selectedYear;
		}

		// Gọi hàm để cập nhật phạm vi năm ban đầu từ URL
		var initialYear = getYearFromURL();
		updateYearRange(initialYear);

		// Lắng nghe sự kiện khi người dùng thay đổi năm
		document.getElementById('yearSelect').addEventListener('change', function () {
			var selectedYear = parseInt(this.value);
			updateYearRange(selectedYear); // Cập nhật phạm vi năm dựa trên năm được chọn
		});
	</script>

	<script>
		document.getElementById('yearSelect').addEventListener('change', function () {
			var selectedYear = parseInt(this.value);

			// Gọi hàm Index trên controller và truyền năm được chọn làm tham số
			window.location.href = '/Dashboard/Index?selectedYear=' + selectedYear;
		});
	</script>




</body>
</html>
